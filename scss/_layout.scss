// layout

@use "_constants" as *;
@use "_mixins" as *;

body
{
	align-items: center;
	padding: 1em var(--padding-page-side) var(--padding-page-side);
}

@media screen and (max-width: $breakpoint)
{
	body
	{
		--padding-page-side: 2em;
	}
}

.link-github
{
	position: relative;
	display: inline-flex;
	display: inline flex;
	flex-direction: row-reverse;
	justify-content: flex-end;

	span
	{
		display: flex; /*! shrink to the size of it's content (svg) */
	}

	svg
	{
		width: 1.5rem;
		height: 1.5rem;
		color: var(--col-accent);
	}
}

header .link-github
{
	justify-content: center;
}

a
{
	&:hover,
	&:active
	{
		text-decoration-style: dashed;
		text-decoration-offset: 0.25em; /*! future css */
	}
}

section.container,
.page-footer .container,
#files .container /*! footer */
{
	padding: 3rem 0;
	border-bottom: var(--rule);
}

/*! https://developer.mozilla.org/en-US/docs/Web/CSS/@counter-style
for browsers that support list ::marker - currently only firefox
system font icons picked from the character map
https://emojipedia.org/bouquet/ */
@counter-style style-counter
{
	system: cyclic;
	symbols: "\1f302" "\1f343" "\1f34d" "\1f346" "\1f407" "\1f414" "\1f40b" "\1f386" "\1f387" "\1f38f" "\1f404" "\1f418" "\1f419" "\1f490";
	suffix: " ";
	speak-as: numbers;
}

#about
{
	section + section ul
	{
		list-style-type: style-counter;
		padding-left: 1em;

		@supports not (list-style-type: style-counter)
		{
			list-style-type: none;
		}

		li
		{
			margin: 2em 0 2em 1em;

			&::marker
			{
				font-size: 2em;
			}

			@supports not (list-style-type: style-counter)
			{
				&::before
				{
					/*! decoration, space */
					content: "\1f302\0020";
					font-size: 2.5em;
					margin-left: -1.25em;
					margin-inline-start: -1.25em;
				}
			}

			&::after
			{
				display: block;
				margin: 0.25em 0 1em;
				padding: 0.5em;
				background-color: var(--col-after-bg);
				opacity: var(--col-after-opacity);
				outline: var(--outline-after);
				word-break: break-all;
			}

			&:nth-of-type(1)
			{
				&::after
				{
					content: "https://developer.mozilla.org/en-US/docs/Glossary/Flexbox";
				}
			}
			&:nth-of-type(2)
			{
				&::after
				{
					content: "https://developer.mozilla.org/en-US/docs/Glossary/Grid";
				}
			}
			&:nth-of-type(3)
			{
				&::after
				{
					content: "https://developer.mozilla.org/en-US/docs/Web/CSS/Using_CSS_custom_properties";
				}
			}
			&:nth-of-type(4)
			{
				&::after
				{
					content: "https://developer.mozilla.org/en-US/docs/Web/CSS/@supports";
				}
			}
			&:nth-of-type(5)
			{
				&::after
				{
					content: "https://developer.mozilla.org/en-US/docs/Web/CSS/gradient";
				}
			}
			&:nth-of-type(6)
			{
				&::after
				{
					content: "https://developer.mozilla.org/en-US/docs/Web/CSS/animation";
				}
			}
			&:nth-of-type(7)
			{
				&::after
				{
					content: "https://developer.mozilla.org/en-US/docs/Web/CSS/transform-function/matrix3d";
				}
			}
			&:nth-of-type(8)
			{
				&::after
				{
					content: "https://developer.mozilla.org/en-US/docs/Web/CSS/object-fit";
				}
			}
			&:nth-of-type(9)
			{
				&::after
				{
					content: "https://developer.mozilla.org/en-US/docs/Web/CSS/:focus-within";
				}
			}
			&:nth-of-type(10)
			{
				&::after
				{
					content: "https://developer.mozilla.org/en-US/docs/Web/CSS/calc";
				}
			}
			&:nth-of-type(11)
			{
				&::after
				{
					content: "https://developer.mozilla.org/en-US/docs/Web/CSS/clamp";
				}
			}
			&:nth-of-type(12)
			{
				&::after
				{
					content: "https://developer.mozilla.org/en-US/docs/Learn/CSS/Building_blocks/Sizing_items_in_CSS#Viewport_units";
				}
			}
			&:nth-of-type(13)
			{
				&::after
				{
					content: "https://developer.mozilla.org/en-US/docs/Web/CSS/scroll-margin";
				}
			}
			&:nth-of-type(14)
			{
				&::after
				{
					content: "https://developer.mozilla.org/en-US/docs/Learn/CSS/CSS_layout/Positioning#position_sticky";
				}
			}
			&:nth-of-type(15)
			{
				&::after
				{
					content: "https://developer.mozilla.org/en-US/docs/Web/CSS/display#Which_syntax_should_you_use_now";
				}
			}
			&:nth-of-type(16)
			{
				&::after
				{
					content: "https://developer.mozilla.org/en-US/docs/Web/CSS/Media_Queries/Using_media_queries";
				}
			}
			&:nth-of-type(17)
			{
				&::after
				{
					content: "https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Fonts/Variable_Fonts_Guide";
				}
			}
		}
	}
}


#files .container /*! footer */
{
	--pink-bg: hsl(323, 23%, 89%);
	--pink-bg-transparent: hsla(323, 23%, 89%, 0.8);

	padding: var(--padding);
	display: grid;
	grid-template-columns: repeat(4,1fr);
	grid-template-rows: max-content repeat(3, auto);
	background-color: var(--pink-bg);
	background-image:
		linear-gradient(var(--pink-bg-transparent), var(--pink-bg-transparent)),
		var(--files-bg);
	background-repeat: no-repeat, no-repeat;
	background-size: 90% 88%,cover;
	background-position: 50% 2em,0 0;

	h3
	{
		grid-column: 1 / -1;
		color: var(--col-text);
	}

	a
	{
		align-self: start;
	}

	.link-downloadcss
	{
		grid-column: 1 / span 2;
	}

	.link-downloadhtml
	{
		grid-column: 2 / 4;
	}

	.link-codepen
	{
		grid-column: 3 / span 2;
	}

	@media only screen and (max-width: 455px)
	{
		display: flex;
		flex-direction: column;

		h3
		{
			text-align: center;
			margin-bottom: var(--padding);
		}

		a
		{
			margin-bottom: var(--padding);
			align-self: stretch;

			&:last-of-type
			{
				margin-bottom: 1em;
			}
		}
	}

	@media only screen and (min-width: 456px) and (max-width: 899px)
	{
		row-gap: var(--padding);

		h3
		{
			margin-bottom: 0;
		}
	}
}

.page-footer ul /*! for when in columns */
{
	break-inside: avoid-column;

	li
	{
		margin-bottom: 0; /*! because the a tags have padding */
	}
}

.page-footer
{
	margin-bottom: var(--padding);

	.container
	{
		@media screen and (max-width: 499px)
		{
			display: grid; /*! to center bunny */
		}

		&::before
		{
			content: var(--bunny);
			display: inline-block;
			clip-path: circle(50% at 50% 50%);

			@media screen and (max-width: 499px)
			{
				margin: 0 auto 1em; /*! margin auto to center bunny */
			}

			@media screen and (min-width: 500px)
			{
				float: right;
				margin: 0.25em;
				shape-outside: circle(50%);
				shape-margin: 1em;
				transform: translateX(-25%);
			}
		}
	}
}

#sponsor-footer
{
	margin-top: auto;
}

#main .container > p
{
	/*! so that first letter float doesn't fall outside of the paragraph block */
	display: flow-root;
}
